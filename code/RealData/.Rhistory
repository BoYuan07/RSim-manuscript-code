rownames(meta) = meta$sample_name
P1 = P[,meta$host == 'M3']
meta1 = meta[meta$host == 'M3',]
P_lp = P1[,meta1$common_sample_site=="R_palm"]
meta_lp = meta1[meta1$common_sample_site=="R_palm",]
seq_depth = data.frame(dp = colSums(P_lp), days = meta_lp$days_since_experiment_start)
# Figure S4c
ggplot(data = seq_depth, aes(x = days, y = dp))+
geom_point(size = 0.3)+
geom_smooth(se = FALSE)+
xlab("Days")+
ylab("Sequencing Depth")+
theme_bw()
system.time(rsim(P1))
library(biomformat)
library(stringr)
library(ape)
library(phyloseq)
library(MicrobiomeStat)
library(ggVennDiagram)
library(edgeR)
library(dada2)
library(microbiome)
library(viridis)
library(RDB)
library(ggplot2)
library(patchwork)
source("../Algorithm.R")
##data preprocessing
filepath <- "../../data/Vangay/"
folders<-list.files(path = filepath)
filep<-paste(filepath,"/","reference-hit.biom", sep = "")
x = read_biom(filep)
treep<-paste(filepath,"/","insertion_tree.relabelled.tre", sep = "")
treefile = readChar(treep,file.info(treep)$size)
str_count(treefile, pattern = '; ')
treefile2 = gsub('; ','|',treefile)
tree = read.tree(text=treefile2)
nalength=is.na(tree$edge.length)
nonzerolength=tree$edge.length!=0
tree$edge.length[nalength]=sample(tree$edge.length[(!nalength)&nonzerolength], sum(nalength))
sum(tree$edge.length==0 & tree$edge[,2]<=length(tree$tip.label))
meta = read.delim(paste(filepath,"/","12080_20210508-071948.txt", sep = ""))
samplenames <- sapply(x$columns, function(y){y$id})
meta <- meta[meta$sample_name %in% samplenames,]
meta$bmi_class[meta$bmi_class=='Obese'] = 'Overweight'
otu <- sapply(x$rows, function(y){y$id})
drop_tips <- tree$tip.label[!(tree$tip.label %in% otu)]
tree <- ape::drop.tip(tree,drop_tips) %>% ape::as.phylo()
P <- sapply(x$data, function(y,subsamplenames){y[subsamplenames]}, subsamplenames = meta$sample_name)
colnames(P) <- otu
P = t(P)
P = P[rowSums(P)>0,]
rownames(meta) = meta$sample_name
#taxonomy = assignTaxonomy(rownames(P), "../data/silva_nr99_v138.1_train_set.fa.gz", multithread=TRUE)
taxonomy = read.csv(paste(filepath,"/","taxonomy.csv", sep = ""),row.names=1)
system.time(rsim(P))
library(biomformat)
library(stringr)
library(ape)
library(phyloseq)
library(MicrobiomeStat)
library(ggVennDiagram)
library(edgeR)
library(dada2)
library(microbiome)
library(viridis)
library(RDB)
library(ggplot2)
library(patchwork)
source("../Algorithm.R")
##data preprocessing
filepath <- "../../data/Vangay/"
folders<-list.files(path = filepath)
filep<-paste(filepath,"/","reference-hit.biom", sep = "")
x = read_biom(filep)
treep<-paste(filepath,"/","insertion_tree.relabelled.tre", sep = "")
treefile = readChar(treep,file.info(treep)$size)
str_count(treefile, pattern = '; ')
treefile2 = gsub('; ','|',treefile)
tree = read.tree(text=treefile2)
nalength=is.na(tree$edge.length)
nonzerolength=tree$edge.length!=0
tree$edge.length[nalength]=sample(tree$edge.length[(!nalength)&nonzerolength], sum(nalength))
sum(tree$edge.length==0 & tree$edge[,2]<=length(tree$tip.label))
meta = read.delim(paste(filepath,"/","12080_20210508-071948.txt", sep = ""))
samplenames <- sapply(x$columns, function(y){y$id})
meta <- meta[meta$sample_name %in% samplenames,]
meta$bmi_class[meta$bmi_class=='Obese'] = 'Overweight'
otu <- sapply(x$rows, function(y){y$id})
drop_tips <- tree$tip.label[!(tree$tip.label %in% otu)]
tree <- ape::drop.tip(tree,drop_tips) %>% ape::as.phylo()
P <- sapply(x$data, function(y,subsamplenames){y[subsamplenames]}, subsamplenames = meta$sample_name)
colnames(P) <- otu
P = t(P)
P = P[rowSums(P)>0,]
rownames(meta) = meta$sample_name
#taxonomy = assignTaxonomy(rownames(P), "../data/silva_nr99_v138.1_train_set.fa.gz", multithread=TRUE)
taxonomy = read.csv(paste(filepath,"/","taxonomy.csv", sep = ""),row.names=1)
OTU = otu_table(P,taxa_are_rows=T) # matrix
META = sample_data(meta) # data frame
PHYLO = phy_tree(tree) # tree (list)
TAXA = tax_table(as.matrix(taxonomy))
physeq = phyloseq(OTU,TAXA,META, PHYLO)
P.list = Normalized(P,eta=0.01)
mds.plot = function(A,gl,main,pvalue){
dist_matrix = dist(t(A))
mds.stuff = cmdscale(dist_matrix, eig=T, x.ret=T)
mds.var.per = round(mds.stuff$eig/sum(mds.stuff$eig)*100,1)
mds.values = mds.stuff$points
mds.data = data.frame(Sample=rownames(mds.values),
X=mds.values[,1],
Y=mds.values[,2],
group = gl)
ggplot(data=mds.data, aes(x=X, y=Y,col=group))+
geom_point(size=0.5)+
xlab(paste("PCoA1 -", mds.var.per[1], '%', sep=""))+
ylab(paste("PCoA2 -", mds.var.per[2], '%', sep=""))+
ggtitle(label = main, subtitle = paste("p-value: ",pvalue))+
theme_bw()
}
set.seed(100)
P.kt = P[,which(meta$sample_group=='KarenThai')]
sequence_depth = as.data.frame(colSums(P.kt))
ind1 = which(sequence_depth<5000)
ind2 = which(sequence_depth>10000)
P_sub = P[,c(ind1,ind2)]
meta_sub = meta[c(ind1,ind2),]
Y = as.factor(c(rep(1,length(ind1)),rep(2,length(ind2))))
pvalue = c()
for(i in 1:length(P.list)){
P2 = P.list[[i]]
P2 = P2[,which(meta$sample_group=='KarenThai')]
P_sub = P2[,c(ind1,ind2)]
Y1 = Y[!is.na(colSums(P_sub))]
P_sub1 = P_sub[,!is.na(colSums(P_sub))]
dist_matrix = dist(t(P_sub1))
df.Y = as.data.frame(Y1)
Re = adonis2(dist_matrix~Y1, data = df.Y,permutations = 9999)
pvalue = c(pvalue,Re$`Pr(>F)`[1])
print(Re$`Pr(>F)`[1])
}
method.list = c('RSim','Unnormalized','CSS','MED','TMM','TSS','UQ','GMPR','Rarefaction')
p = NULL
Y = as.factor(c(rep("<5000",length(ind1)),rep(">10000",length(ind2))))
for(i in 1:length(P.list)){
P2 = P.list[[i]]
P2 = P2[,which(meta$sample_group=='KarenThai')]
P_sub = P2[,c(ind1,ind2)]
Y1 = Y[!is.na(colSums(P_sub))]
P_sub1 = P_sub[,!is.na(colSums(P_sub))]
if(is.null(p)){
p = mds.plot(log(P_sub1+1),Y1,method.list[i],pvalue[i])
}else{
p = p + mds.plot(log(P_sub1+1),Y1,method.list[i],pvalue[i])
}
}
p+ plot_layout(ncol = 9,guides = "collect")& theme(legend.position = "bottom")
library(biomformat)
library(stringr)
library(ape)
library(phyloseq)
library(MicrobiomeStat)
library(ggVennDiagram)
library(edgeR)
library(dada2)
library(microbiome)
library(viridis)
library(RDB)
library(viridis)
library(ggplot2)
library(patchwork)
source("../Algorithm.R")
##data preprocessing
filepath <- "../../data/Caporaso/"
folders<-list.files(path = filepath)
i=1
filep<-paste(filepath,"/","reference-hit.biom", sep = "")
x = read_biom(filep)
treep<-paste(filepath,"/","insertion_tree.relabelled.tre", sep = "")
treefile = readChar(treep,file.info(treep)$size)
str_count(treefile, pattern = '; ')
treefile2 = gsub('; ','|',treefile)
tree = read.tree(text=treefile2)
nalength=is.na(tree$edge.length)
nonzerolength=tree$edge.length!=0
tree$edge.length[nalength]=sample(tree$edge.length[(!nalength)&nonzerolength], sum(nalength))
sum(tree$edge.length==0 & tree$edge[,2]<=length(tree$tip.label))
meta = read.delim(paste(filepath,"/","sample_data.txt", sep = ""))
samplenames <- sapply(x$columns, function(y){y$id})
meta <- meta[meta$sample_name %in% samplenames,]
otu <- sapply(x$rows, function(y){y$id})
drop_tips <- tree$tip.label[!(tree$tip.label %in% otu)]
tree <- ape::drop.tip(tree,drop_tips) %>% ape::as.phylo()
P <- sapply(x$data, function(y,subsamplenames){y[subsamplenames]}, subsamplenames = meta$sample_name)
colnames(P) <- otu
P = t(P)
meta = meta[colSums(P)>100,]
P = P[rowSums(P)>0,]
P = P[,colSums(P)>100]
rownames(meta) = meta$sample_name
P1 = P[,meta$host == 'M3']
meta1 = meta[meta$host == 'M3',]
P_lp = P1[,meta1$common_sample_site=="R_palm"]
meta_lp = meta1[meta1$common_sample_site=="R_palm",]
seq_depth = data.frame(dp = colSums(P_lp), days = meta_lp$days_since_experiment_start)
# Figure S4c
ggplot(data = seq_depth, aes(x = days, y = dp))+
geom_point(size = 0.3)+
geom_smooth(se = FALSE)+
xlab("Days")+
ylab("Sequencing Depth")+
theme_bw()
# Normalization
P.list = Normalized(P1,eta=0)
method.list = c('RSim','Unnormalized','CSS','MED','TMM','TSS','UQ','GMPR','Rarefaction')
dist.list = list()
for(i in 1:length(P.list)){
dist.list[[i]] = dist(t((log2(P.list[[i]]+1))))
}
palm.ind = which(meta1$common_sample_site == 'R_palm')
dist.palm = list()
for(i in 1:length(P.list)){
distP = as.matrix(dist.list[[i]])
dist.palm[[i]] = distP[palm.ind,palm.ind]
}
# Figure S4a
time = meta_lp$days_since_experiment_start
p.age = NULL
for(i in 1:length(P.list)){
dist_matrix = dist.palm[[i]]
mds.stuff = cmdscale(dist_matrix, eig=T, x.ret=T)
mds.var.per = round(mds.stuff$eig/sum(mds.stuff$eig)*100,1)
mds.values = mds.stuff$points
mds.data = data.frame(Sample=rownames(mds.values),
X=mds.values[,1],
Y=mds.values[,2],
Days = time)
if(is.null(p.age)){
p.age = ggplot(data=mds.data, aes(x=X, y=Y,col=Days))+
geom_point(size=0.5)+
scale_colour_gradientn(colors = viridis(10))+
xlab(paste("PCoA1 -", mds.var.per[1], '%', sep=""))+
ylab(paste("PCoA2 -", mds.var.per[2], '%', sep=""))+
ggtitle(label = method.list[i])+
theme_bw()
}else{
p.age = p.age + ggplot(data=mds.data, aes(x=X, y=Y,col=Days))+
geom_point(size=0.5)+
scale_colour_gradientn(colors = viridis(10))+
xlab(paste("PCoA1 -", mds.var.per[1], '%', sep=""))+
ylab(paste("PCoA2 -", mds.var.per[2], '%', sep=""))+
ggtitle(label = method.list[i])+
theme_bw()
}
}
p.age + plot_layout(ncol = 9,guides = "collect")&theme(legend.position = "bottom")
# Figure S4b
seq = colSums(P_lp)
p.seq = NULL
for(i in 1:length(P.list)){
dist_matrix = dist.palm[[i]]
mds.stuff = cmdscale(dist_matrix, eig=T, x.ret=T)
mds.var.per = round(mds.stuff$eig/sum(mds.stuff$eig)*100,1)
mds.values = mds.stuff$points
mds.data = data.frame(Sample=rownames(mds.values),
X=mds.values[,1],
Y=mds.values[,2],
gl = seq)
if(is.null(p.seq)){
p.seq = ggplot(data=mds.data, aes(x=X, y=Y,col=gl))+
geom_point(size=0.5)+
scale_colour_gradientn(colors = viridis(10),name = "Sequencing Depth")+
xlab(paste("PCoA1 -", mds.var.per[1], '%', sep=""))+
ylab(paste("PCoA2 -", mds.var.per[2], '%', sep=""))+
ggtitle(label = method.list[i])+
theme_bw()
}else{
p.seq = p.seq + ggplot(data=mds.data, aes(x=X, y=Y,col=gl))+
geom_point(size=0.5)+
scale_colour_gradientn(colors = viridis(10),name = "Sequencing Depth")+
xlab(paste("PCoA1 -", mds.var.per[1], '%', sep=""))+
ylab(paste("PCoA2 -", mds.var.per[2], '%', sep=""))+
ggtitle(label = method.list[i])+
theme_bw()
}
}
p.seq + plot_layout(ncol = 9,guides = "collect")&theme(legend.position = "bottom")
library(ggplot2)
## ----ImportOTUTable,tidy=F-----------------------------------------------
#Import text formatted OTU Table as derived by biom convert:
scml.OTUs_tax<-read.table("./OTU_Table_wTax_DilutionExperiment.txt",sep="\t",
stringsAsFactors=F,header=TRUE,row.names=1)
library(biomformat)
library(stringr)
library(ape)
library(phyloseq)
library(MicrobiomeStat)
library(ggVennDiagram)
library(edgeR)
library(dada2)
library(microbiome)
library(viridis)
library(RDB)
library(ggplot2)
library(patchwork)
source("../Algorithm.R")
##data preprocessing
filepath <- "../../data/Vangay/"
folders<-list.files(path = filepath)
filep<-paste(filepath,"/","reference-hit.biom", sep = "")
x = read_biom(filep)
treep<-paste(filepath,"/","insertion_tree.relabelled.tre", sep = "")
treefile = readChar(treep,file.info(treep)$size)
str_count(treefile, pattern = '; ')
treefile2 = gsub('; ','|',treefile)
tree = read.tree(text=treefile2)
nalength=is.na(tree$edge.length)
nonzerolength=tree$edge.length!=0
tree$edge.length[nalength]=sample(tree$edge.length[(!nalength)&nonzerolength], sum(nalength))
sum(tree$edge.length==0 & tree$edge[,2]<=length(tree$tip.label))
meta = read.delim(paste(filepath,"/","12080_20210508-071948.txt", sep = ""))
samplenames <- sapply(x$columns, function(y){y$id})
meta <- meta[meta$sample_name %in% samplenames,]
meta$bmi_class[meta$bmi_class=='Obese'] = 'Overweight'
otu <- sapply(x$rows, function(y){y$id})
drop_tips <- tree$tip.label[!(tree$tip.label %in% otu)]
tree <- ape::drop.tip(tree,drop_tips) %>% ape::as.phylo()
P <- sapply(x$data, function(y,subsamplenames){y[subsamplenames]}, subsamplenames = meta$sample_name)
colnames(P) <- otu
P = t(P)
P = P[rowSums(P)>0,]
rownames(meta) = meta$sample_name
#taxonomy = assignTaxonomy(rownames(P), "../data/silva_nr99_v138.1_train_set.fa.gz", multithread=TRUE)
taxonomy = read.csv(paste(filepath,"/","taxonomy.csv", sep = ""),row.names=1)
OTU = otu_table(P,taxa_are_rows=T) # matrix
META = sample_data(meta) # data frame
PHYLO = phy_tree(tree) # tree (list)
TAXA = tax_table(as.matrix(taxonomy))
physeq = phyloseq(OTU,TAXA,META, PHYLO)
P.list = Normalized(P,eta=0.01)
mds.plot = function(A,gl,main,pvalue){
dist_matrix = dist(t(A))
mds.stuff = cmdscale(dist_matrix, eig=T, x.ret=T)
mds.var.per = round(mds.stuff$eig/sum(mds.stuff$eig)*100,1)
mds.values = mds.stuff$points
mds.data = data.frame(Sample=rownames(mds.values),
X=mds.values[,1],
Y=mds.values[,2],
group = gl)
ggplot(data=mds.data, aes(x=X, y=Y,col=group))+
geom_point(size=0.5)+
xlab(paste("PCoA1 -", mds.var.per[1], '%', sep=""))+
ylab(paste("PCoA2 -", mds.var.per[2], '%', sep=""))+
ggtitle(label = main, subtitle = paste("p-value: ",pvalue))+
theme_bw()
}
set.seed(100)
P.kt = P[,which(meta$sample_group=='KarenThai')]
sequence_depth = as.data.frame(colSums(P.kt))
ind1 = which(sequence_depth<5000)
ind2 = which(sequence_depth>10000)
P_sub = P[,c(ind1,ind2)]
meta_sub = meta[c(ind1,ind2),]
Y = as.factor(c(rep(1,length(ind1)),rep(2,length(ind2))))
pvalue = c()
for(i in 1:length(P.list)){
P2 = P.list[[i]]
P2 = P2[,which(meta$sample_group=='KarenThai')]
P_sub = P2[,c(ind1,ind2)]
Y1 = Y[!is.na(colSums(P_sub))]
P_sub1 = P_sub[,!is.na(colSums(P_sub))]
dist_matrix = dist(t(P_sub1))
df.Y = as.data.frame(Y1)
Re = adonis2(dist_matrix~Y1, data = df.Y,permutations = 9999)
pvalue = c(pvalue,Re$`Pr(>F)`[1])
print(Re$`Pr(>F)`[1])
}
save(P.list,file = "3cData.RData")
method.list = c('RSim','Unnormalized','CSS','MED','TMM','TSS','UQ','GMPR','Rarefaction')
p = NULL
Y = as.factor(c(rep("<5000",length(ind1)),rep(">10000",length(ind2))))
for(i in 1:length(P.list)){
P2 = P.list[[i]]
P2 = P2[,which(meta$sample_group=='KarenThai')]
P_sub = P2[,c(ind1,ind2)]
Y1 = Y[!is.na(colSums(P_sub))]
P_sub1 = P_sub[,!is.na(colSums(P_sub))]
if(is.null(p)){
p = mds.plot(log(P_sub1+1),Y1,method.list[i],pvalue[i])
}else{
p = p + mds.plot(log(P_sub1+1),Y1,method.list[i],pvalue[i])
}
}
p+ plot_layout(ncol = 9,guides = "collect")& theme(legend.position = "bottom")
ggsave("../figure/Fig3c.png", units="in", width=15, height=2.5, res=300)
method.list = c('RSim','Unnormalized','CSS','MED','TMM','TSS','UQ','GMPR','Rarefaction')
p = NULL
Y = as.factor(c(rep("<5000",length(ind1)),rep(">10000",length(ind2))))
for(i in 1:length(P.list)){
P2 = P.list[[i]]
P2 = P2[,which(meta$sample_group=='KarenThai')]
P_sub = P2[,c(ind1,ind2)]
Y1 = Y[!is.na(colSums(P_sub))]
P_sub1 = P_sub[,!is.na(colSums(P_sub))]
if(is.null(p)){
p = mds.plot(log(P_sub1+1),Y1,method.list[i],pvalue[i])
}else{
p = p + mds.plot(log(P_sub1+1),Y1,method.list[i],pvalue[i])
}
}
p+ plot_layout(ncol = 9,guides = "collect")& theme(legend.position = "bottom")
ggsave("../figure/Fig3c.png", units="in", width=15, height=2.5, dpi=300)
method.list = c('RSim','Unnormalized','CSS','MED','TMM','TSS','UQ','GMPR','Rarefaction')
p = NULL
Y = as.factor(c(rep("<5000",length(ind1)),rep(">10000",length(ind2))))
for(i in 1:length(P.list)){
P2 = P.list[[i]]
P2 = P2[,which(meta$sample_group=='KarenThai')]
P_sub = P2[,c(ind1,ind2)]
Y1 = Y[!is.na(colSums(P_sub))]
P_sub1 = P_sub[,!is.na(colSums(P_sub))]
if(is.null(p)){
p = mds.plot(log(P_sub1+1),Y1,method.list[i],pvalue[i])
}else{
p = p + mds.plot(log(P_sub1+1),Y1,method.list[i],pvalue[i])
}
}
p+ plot_layout(ncol = 9,guides = "collect")& theme(legend.position = "bottom")
ggsave("../figure/Fig3c.png", units="in", width=15, height=3, dpi=300)
method.list = c('RSim','Unnormalized','CSS','MED','TMM','TSS','UQ','GMPR','Rarefaction')
p = NULL
Y = as.factor(c(rep("<5000",length(ind1)),rep(">10000",length(ind2))))
for(i in 1:length(P.list)){
P2 = P.list[[i]]
P2 = P2[,which(meta$sample_group=='KarenThai')]
P_sub = P2[,c(ind1,ind2)]
Y1 = Y[!is.na(colSums(P_sub))]
P_sub1 = P_sub[,!is.na(colSums(P_sub))]
if(is.null(p)){
p = mds.plot(log(P_sub1+1),Y1,method.list[i],pvalue[i])
}else{
p = p + mds.plot(log(P_sub1+1),Y1,method.list[i],pvalue[i])
}
}
p+ plot_layout(ncol = 9,guides = "collect")& theme(legend.position = "bottom")
ggsave("../figure/Fig3c.png", units="in", width=15, height=2.7, dpi=300)
mds.plot = function(A,gl,main,pvalue){
dist_matrix = dist(t(A))
mds.stuff = cmdscale(dist_matrix, eig=T, x.ret=T)
mds.var.per = round(mds.stuff$eig/sum(mds.stuff$eig)*100,1)
mds.values = mds.stuff$points
mds.data = data.frame(Sample=rownames(mds.values),
X=mds.values[,1],
Y=mds.values[,2],
Group = gl)
ggplot(data=mds.data, aes(x=X, y=Y,col=group))+
geom_point(size=0.5)+
xlab(paste("PCoA1 -", mds.var.per[1], '%', sep=""))+
ylab(paste("PCoA2 -", mds.var.per[2], '%', sep=""))+
ggtitle(label = main, subtitle = paste("p-value: ",pvalue))+
theme_bw()
}
method.list = c('RSim','Unnormalized','CSS','MED','TMM','TSS','UQ','GMPR','Rarefaction')
p = NULL
Y = as.factor(c(rep("<5000",length(ind1)),rep(">10000",length(ind2))))
for(i in 1:length(P.list)){
P2 = P.list[[i]]
P2 = P2[,which(meta$sample_group=='KarenThai')]
P_sub = P2[,c(ind1,ind2)]
Y1 = Y[!is.na(colSums(P_sub))]
P_sub1 = P_sub[,!is.na(colSums(P_sub))]
if(is.null(p)){
p = mds.plot(log(P_sub1+1),Y1,method.list[i],pvalue[i])
}else{
p = p + mds.plot(log(P_sub1+1),Y1,method.list[i],pvalue[i])
}
}
p+ plot_layout(ncol = 9,guides = "collect")& theme(legend.position = "bottom")
mds.plot = function(A,gl,main,pvalue){
dist_matrix = dist(t(A))
mds.stuff = cmdscale(dist_matrix, eig=T, x.ret=T)
mds.var.per = round(mds.stuff$eig/sum(mds.stuff$eig)*100,1)
mds.values = mds.stuff$points
mds.data = data.frame(Sample=rownames(mds.values),
X=mds.values[,1],
Y=mds.values[,2],
Group = gl)
ggplot(data=mds.data, aes(x=X, y=Y,col=Group))+
geom_point(size=0.5)+
xlab(paste("PCoA1 -", mds.var.per[1], '%', sep=""))+
ylab(paste("PCoA2 -", mds.var.per[2], '%', sep=""))+
ggtitle(label = main, subtitle = paste("p-value: ",pvalue))+
theme_bw()
}
method.list = c('RSim','Unnormalized','CSS','MED','TMM','TSS','UQ','GMPR','Rarefaction')
p = NULL
Y = as.factor(c(rep("<5000",length(ind1)),rep(">10000",length(ind2))))
for(i in 1:length(P.list)){
P2 = P.list[[i]]
P2 = P2[,which(meta$sample_group=='KarenThai')]
P_sub = P2[,c(ind1,ind2)]
Y1 = Y[!is.na(colSums(P_sub))]
P_sub1 = P_sub[,!is.na(colSums(P_sub))]
if(is.null(p)){
p = mds.plot(log(P_sub1+1),Y1,method.list[i],pvalue[i])
}else{
p = p + mds.plot(log(P_sub1+1),Y1,method.list[i],pvalue[i])
}
}
p+ plot_layout(ncol = 9,guides = "collect")& theme(legend.position = "bottom")
ggsave("../figure/Fig3c.png", units="in", width=15, height=2.7, dpi=300)

library(dplyr)
library(patchwork)
library(ggplot2)
source("../Algorithm.R")
load('../../data/He/subtree.RData')
set.seed(1)
A1 = t(A)
A1 = A1[rowSums(A1)!=0,]
A1 = A1[,sample(ncol(A1),500)]
# weak signal(1400/250)
set.seed(1)
X = A1
d = nrow(X)
m = ncol(X)
Y = runif(m)
lambda = 1
Clade = sample(d,0.1*d)
X[Clade,1:(m/2)] = X[Clade,1:(m/2)]+matrix(rpois((length(Clade)*m/2), lambda),nrow = length(Clade))
X = sapply(1:m, function(i)rbinom(d, X[,i], Y[i]))
sf_res1 = est_factor(X, eta=0.2, ref = (1:d)[-Clade])
for(i in 1:7){
sf_res1[((i-1)*m+1):(i*m),1] = sf_res1[((i-1)*m+1):(i*m),1]*mean(Y)/mean(sf_res1[((i-1)*m+1):(i*m),1])
}
sf_res1$Group = rep(as.factor(c(rep(1,m/2),rep(2,m/2))),7)
View(sf_res1)
Unique(sf_res1$Method)
unique(sf_res1$Method)
for(i in 1:8){
sf_res1[((i-1)*m+1):(i*m),1] = sf_res1[((i-1)*m+1):(i*m),1]*mean(Y)/mean(sf_res1[((i-1)*m+1):(i*m),1])
}
sf_res1$Group = rep(as.factor(c(rep(1,m/2),rep(2,m/2))),8)
sf_res1$true = rep(Y,8)
ggplot(data = sf_res1, aes(x = true, y = sf.est, color = Group))+
geom_point(size = 0.25)+
geom_abline(slope = 1,intercept = 0,color = 'black',linewidth = 0.25)+
facet_grid(cols = vars(Method))+
xlab('True Sampling Fraction')+
ylab('Estimated Sampling Fraction')+
theme_bw()+
ylim(0,3)
ggsave("../figure/Fig2a.png", units="in", width=15, height=3, dpi=300)
for(i in 1:8){
sf_res1[((i-1)*m+1):(i*m),1] = sf_res1[((i-1)*m+1):(i*m),1]*mean(Y)/mean(sf_res1[((i-1)*m+1):(i*m),1])
}
sf_res1$Group = rep(as.factor(c(rep(1,m/2),rep(2,m/2))),8)
sf_res1$true = rep(Y,8)
ggplot(data = sf_res1, aes(x = true, y = sf.est, color = Group))+
geom_point(size = 0.25)+
geom_abline(slope = 1,intercept = 0,color = 'black',linewidth = 0.25)+
facet_grid(cols = vars(Method))+
xlab('True Sampling Fraction')+
ylab('Estimated Sampling Fraction')+
theme_bw()+
ylim(0,3)
ggsave("../figure/Fig2a.png", units="in", width=13, height=3, dpi=300)
for(i in 1:8){
sf_res1[((i-1)*m+1):(i*m),1] = sf_res1[((i-1)*m+1):(i*m),1]*mean(Y)/mean(sf_res1[((i-1)*m+1):(i*m),1])
}
sf_res1$Group = rep(as.factor(c(rep(1,m/2),rep(2,m/2))),8)
sf_res1$true = rep(Y,8)
ggplot(data = sf_res1, aes(x = true, y = sf.est, color = Group))+
geom_point(size = 0.25)+
geom_abline(slope = 1,intercept = 0,color = 'black',linewidth = 0.25)+
facet_grid(cols = vars(Method))+
xlab('True Sampling Fraction')+
ylab('Estimated Sampling Fraction')+
theme_bw()+
ylim(0,3)
ggsave("../figure/Fig2a.png", units="in", width=15, height=2, dpi=300)
for(i in 1:8){
sf_res1[((i-1)*m+1):(i*m),1] = sf_res1[((i-1)*m+1):(i*m),1]*mean(Y)/mean(sf_res1[((i-1)*m+1):(i*m),1])
}
sf_res1$Group = rep(as.factor(c(rep(1,m/2),rep(2,m/2))),8)
sf_res1$true = rep(Y,8)
ggplot(data = sf_res1, aes(x = true, y = sf.est, color = Group))+
geom_point(size = 0.25)+
geom_abline(slope = 1,intercept = 0,color = 'black',linewidth = 0.25)+
facet_grid(cols = vars(Method))+
xlab('True Sampling Fraction')+
ylab('Estimated Sampling Fraction')+
theme_bw()+
ylim(0,3)
ggsave("../figure/Fig2a.png", units="in", width=15, height=2.5, dpi=300)
set.seed(1)
# moderate signal
X = A1
d = nrow(X)
m = ncol(X)
Y = runif(m)
lambda = 10
Clade = sample(d,0.1*d)
X[Clade,1:(m/2)] = X[Clade,1:(m/2)]+matrix(rpois((length(Clade)*m/2), lambda),nrow = length(Clade))
X = sapply(1:m, function(i)rbinom(d, X[,i], Y[i]))
sf_res2 = est_factor(X, eta=0.25, ref = (1:d)[-Clade])
for(i in 1:8){
sf_res2[((i-1)*m+1):(i*m),1] = sf_res2[((i-1)*m+1):(i*m),1]*mean(Y)/mean(sf_res2[((i-1)*m+1):(i*m),1])
}
sf_res2$Group = rep(as.factor(c(rep(1,m/2),rep(2,m/2))),8)
sf_res2$true = rep(Y,8)
ggplot(data = sf_res2, aes(x = true, y = sf.est, color = Group))+
geom_point(size = 0.25)+
geom_abline(slope = 1,intercept = 0,color = 'black',linewidth = 0.25)+
facet_grid(cols = vars(Method))+
xlab('True Sampling Fraction')+
ylab('Estimated Sampling Fraction')+
theme_bw()+
ylim(0,3)
ggsave("../figure/Fig2b.png", units="in", width=15, height=2.5, dpi=300)
set.seed(1)
# strong signal
X = A1
d = nrow(X)
m = ncol(X)
Y = runif(m)
lambda = 100
Clade = sample(d,0.1*d)
X[Clade,1:(m/2)] = X[Clade,1:(m/2)]+matrix(rpois((length(Clade)*m/2), lambda),nrow = length(Clade))
X = sapply(1:m, function(i)rbinom(d, X[,i], Y[i]))
sf_res3 = est_factor(X, eta=0.22, ref = (1:d)[-Clade])
getwd()
# Chunk 1
library(dplyr)
library(patchwork)
library(ggplot2)
source("../Algorithm.R")
load('../../data/He/subtree.RData')
# Chunk 2
set.seed(1)
A1 = t(A)
A1 = A1[rowSums(A1)!=0,]
A1 = A1[,sample(ncol(A1),500)]
# Chunk 3
# weak signal(1400/250)
set.seed(1)
X = A1
d = nrow(X)
m = ncol(X)
Y = runif(m)
lambda = 1
Clade = sample(d,0.1*d)
X[Clade,1:(m/2)] = X[Clade,1:(m/2)]+matrix(rpois((length(Clade)*m/2), lambda),nrow = length(Clade))
X = sapply(1:m, function(i)rbinom(d, X[,i], Y[i]))
sf_res1 = est_factor(X, eta=0.2, ref = (1:d)[-Clade])
for(i in 1:8){
sf_res1[((i-1)*m+1):(i*m),1] = sf_res1[((i-1)*m+1):(i*m),1]*mean(Y)/mean(sf_res1[((i-1)*m+1):(i*m),1])
}
sf_res1$Group = rep(as.factor(c(rep(1,m/2),rep(2,m/2))),8)
sf_res1$true = rep(Y,8)
sf_res1$Method = factor(sf_res1$Method,level = c('RSim','CSS','MED','TMM','TSS','UQ','GMPR','Oracle'))
ggplot(data = sf_res1, aes(x = true, y = sf.est, color = Group))+
geom_point(size = 0.25)+
geom_abline(slope = 1,intercept = 0,color = 'black',linewidth = 0.25)+
facet_grid(cols = vars(Method))+
xlab('True Sampling Fraction')+
ylab('Estimated Sampling Fraction')+
theme_bw()+
ylim(0,3)
ggsave("../figure/Fig2a.png", units="in", width=15, height=2.5, dpi=300)
# Chunk 4
set.seed(1)
# moderate signal
X = A1
d = nrow(X)
m = ncol(X)
Y = runif(m)
lambda = 10
Clade = sample(d,0.1*d)
X[Clade,1:(m/2)] = X[Clade,1:(m/2)]+matrix(rpois((length(Clade)*m/2), lambda),nrow = length(Clade))
X = sapply(1:m, function(i)rbinom(d, X[,i], Y[i]))
sf_res2 = est_factor(X, eta=0.25, ref = (1:d)[-Clade])
for(i in 1:8){
sf_res2[((i-1)*m+1):(i*m),1] = sf_res2[((i-1)*m+1):(i*m),1]*mean(Y)/mean(sf_res2[((i-1)*m+1):(i*m),1])
}
sf_res2$Group = rep(as.factor(c(rep(1,m/2),rep(2,m/2))),8)
sf_res2$true = rep(Y,8)
sf_res2$Method = factor(sf_res2$Method,level = c('RSim','CSS','MED','TMM','TSS','UQ','GMPR','Oracle'))
ggplot(data = sf_res2, aes(x = true, y = sf.est, color = Group))+
geom_point(size = 0.25)+
geom_abline(slope = 1,intercept = 0,color = 'black',linewidth = 0.25)+
facet_grid(cols = vars(Method))+
xlab('True Sampling Fraction')+
ylab('Estimated Sampling Fraction')+
theme_bw()+
ylim(0,3)
ggsave("../figure/Fig2b.png", units="in", width=15, height=2.5, dpi=300)
# Chunk 5
set.seed(1)
# strong signal
X = A1
d = nrow(X)
m = ncol(X)
Y = runif(m)
lambda = 100
Clade = sample(d,0.1*d)
X[Clade,1:(m/2)] = X[Clade,1:(m/2)]+matrix(rpois((length(Clade)*m/2), lambda),nrow = length(Clade))
X = sapply(1:m, function(i)rbinom(d, X[,i], Y[i]))
sf_res3 = est_factor(X, eta=0.22, ref = (1:d)[-Clade])
for(i in 1:8){
sf_res3[((i-1)*m+1):(i*m),1] = sf_res3[((i-1)*m+1):(i*m),1]*mean(Y)/mean(sf_res3[((i-1)*m+1):(i*m),1])
}
sf_res3$Group = rep(as.factor(c(rep(1,m/2),rep(2,m/2))),8)
sf_res3$true = rep(Y,8)
sf_res3$Method = factor(sf_res3$Method,level = c('RSim','CSS','MED','TMM','TSS','UQ','GMPR','Oracle'))
ggplot(data = sf_res3, aes(x = true, y = sf.est, color = Group))+
geom_point(size = 0.25)+
geom_abline(slope = 1,intercept = 0,color = 'black',linewidth = 0.25)+
facet_grid(cols = vars(Method))+
xlab('True Sampling Fraction')+
ylab('Estimated Sampling Fraction')+
theme_bw()+
ylim(0,3)
ggsave("../figure/Fig2c.png", units="in", width=15, height=2.5, dpi=300)
# sf
files = list.files(path = "../table/sampling_fraction/", full.names = TRUE)
table = NULL
method = c('CSS','GMPR','MED','RSim','TMM','TSS','UQ')
for(i in 1:length(files)){
if(is.null(table)){
table = sf.table(files[i],method[i])
}else{
table = rbind(table,sf.table(files[i],method[i]))
}
}
sf.table = function(X,method){
X1 = read.csv(X)[,-1]
res1 = data.frame(Bias = c(t(abs(X1[1,])),t(abs(X1[2,])),t(abs(X1[3,]))))
res1$lambda = c(1,10,100)
res1$p = as.factor(c(rep("p=0.1",3),rep("p=0.2",3),rep("p=0.3",3)))
res1$Method = method
return(res1)
}
# sf
files = list.files(path = "../table/sampling_fraction/", full.names = TRUE)
table = NULL
method = c('CSS','GMPR','MED','RSim','TMM','TSS','UQ')
for(i in 1:length(files)){
if(is.null(table)){
table = sf.table(files[i],method[i])
}else{
table = rbind(table,sf.table(files[i],method[i]))
}
}
# Figure 2d
table$Method = factor(table$Method,level = c('RSim','CSS','MED','TMM','TSS','UQ','GMPR'))
ggplot(data=table, aes(x=as.factor(lambda), y=Bias, fill=Method))+
geom_bar(stat="identity",
position=position_dodge(),
size=.1,
) +                        # Thinner lines
scale_fill_brewer(palette = "Set2")+
facet_grid(cols = vars(p))+    # Set legend title
xlab("Signal Strength") +
ylab("Bias")+
coord_flip()+
theme_bw()+
theme(legend.text = element_text(size=10))
tiff("Fig2d.png", units="in", width=6, height=2.7, dpi=300)
# sf
files = list.files(path = "../table/sampling_fraction/", full.names = TRUE)
table = NULL
method = c('CSS','GMPR','MED','RSim','TMM','TSS','UQ')
for(i in 1:length(files)){
if(is.null(table)){
table = sf.table(files[i],method[i])
}else{
table = rbind(table,sf.table(files[i],method[i]))
}
}
# Figure 2d
table$Method = factor(table$Method,level = c('RSim','CSS','MED','TMM','TSS','UQ','GMPR'))
ggplot(data=table, aes(x=as.factor(lambda), y=Bias, fill=Method))+
geom_bar(stat="identity",
position=position_dodge(),
size=.1,
) +                        # Thinner lines
scale_fill_brewer(palette = "Set2")+
facet_grid(cols = vars(p))+    # Set legend title
xlab("Signal Strength") +
ylab("Bias")+
coord_flip()+
theme_bw()+
theme(legend.text = element_text(size=10))
ggsave("Fig2d.png", units="in", width=6, height=2.7, dpi=300)
setwd("../figure/")
# Figure 4b
ds_mirk = read.csv('../table/twosample/weaksig-mirk.csv')[-10,-1]
ds_perm = read.csv('../table/twosample/weaksig-perm.csv')[-10,-1]
res1 = c()
res2 = c()
for(k in 1:ncol(ds_perm)){
res1 = c(res1,ds_perm[,k])
res2 = c(res2,ds_mirk[,k])
}
res1 = data.frame('Power'=res1)
res2 = data.frame('Power'=res2)
res1$Method =  rep(c('RSim','Unnormalized','CSS','MED','TMM','TSS','UQ','GMPR','Rarefaction'),ncol(ds_perm))
res2$Method =  rep(c('RSim','Unnormalized','CSS','MED','TMM','TSS','UQ','GMPR','Rarefaction'),ncol(ds_perm))
k = 9
res1$m = c(rep(100,k),rep(300,k),rep(500,k))
res2$m = c(rep(100,k),rep(300,k),rep(500,k))
res1$Test = rep('PERMANOVA',3*k)
res2$Test = rep('MiRKAT',3*k)
res = rbind(res1,res2)
res$Method = factor(res$Method,level = c('RSim','Unnormalized','CSS','MED','TMM','TSS','UQ','GMPR','Rarefaction'))
ggplot(data=res, aes(x=as.factor(m), y=Power, fill=Method))+
geom_bar(stat="identity",
position=position_dodge(),
size=.3,
) +                        # Thinner lines
scale_fill_brewer(palette = "Set3")+
facet_grid(cols = vars(Test))+    # Set legend title
xlab("Sample size") +
ylab("Power")+
coord_flip()+
theme_bw()+
theme(legend.text = element_text(size=10))
ggsave("Fig4b.png", units="in", width=7, height=4, dpi=300)
# Figure 4a
ds_mirk = read.csv('../table/twosample/sc-mirk.csv')[,-1]
ds_perm = read.csv('../table/twosample/sc-perm.csv')[,-1]
ds_mirk = ds_mirk[-10,]
ds_perm = ds_perm[-10,]
res1 = c()
res2 = c()
for(k in 1:ncol(ds_perm)){
res1 = c(res1,ds_perm[,k])
res2 = c(res2,ds_mirk[,k])
}
res1 = data.frame('Power'=res1)
res2 = data.frame('Power'=res2)
res1$Method =  rep(c('RSim','Unnormalized','CSS','MED','TMM','TSS','UQ','GMPR','Rarefaction'),ncol(ds_perm))
res2$Method =  rep(c('RSim','Unnormalized','CSS','MED','TMM','TSS','UQ','GMPR','Rarefaction'),ncol(ds_perm))
k = 9
res1$c = c(rep(1,k),rep(2,k),rep(3,k))
res2$c = c(rep(1,k),rep(2,k),rep(3,k))
res1$Test = rep('PERMANOVA',3*k)
res2$Test = rep('MiRKAT',3*k)
res = rbind(res1,res2)
res$Method = factor(res$Method,level = c('RSim','Unnormalized','CSS','MED','TMM','TSS','UQ','GMPR','Rarefaction'))
## plot
ggplot(data=res, aes(x=as.factor(c), y=Power, fill=Method))+
geom_bar(stat="identity",
position=position_dodge(),
size=.3) +                        # Thinner lines
scale_fill_brewer(palette = "Set3")+
facet_grid(cols = vars(Test))+    # Set legend title
xlab("Sampling Fraction Difference") +
ylab("Type I Error")+
coord_flip()+
theme_bw()+
theme(legend.text = element_text(size=10))+
geom_hline(yintercept=0.05, linetype="dashed",
color = "red", size=1)
ggsave("Fig4a.png", units="in", width=7, height=4, dpi=300)
sensitivity.table = function(X,method){
X1 = read.csv(X)[,-1]
res1 = data.frame(Sensitivity = c(t(X1[1,]),t(X1[2,]),t(X1[3,])))
res1$lambda = c(100,200,300)
res1$m = as.factor(c(rep(100,3),rep(200,3),rep(300,3)))
res1$Method = method
return(res1)
}
FDR.table = function(X,method){
X1 = read.csv(X)[,-1]
res1 = data.frame(FDR = c(t(X1[1,]),t(X1[2,]),t(X1[3,])))
res1$lambda = c(100,200,300)
res1$m = as.factor(c(rep(100,3),rep(200,3),rep(300,3)))
res1$Method = method
return(res1)
}
# Figure 5a
files = list.files(path = "../table/t/", pattern = "\\_sensitivity.csv$", full.names = TRUE)
table = NULL
method = c('CSS','GMPR','MED','Unnormalized','RSim','TMM','TSS','UQ')
for(i in 1:length(files)){
if(is.null(table)){
table = sensitivity.table(files[i],method[i])
}else{
table = rbind(table,sensitivity.table(files[i],method[i]))
}
}
table$Method = factor(table$Method,level = c('RSim','Unnormalized','CSS','MED','TMM','TSS','UQ','GMPR'))
ggplot(data=table, aes(x= lambda, y = Sensitivity, group = m))+
geom_line(linetype = "solid",aes(colour=m))+
geom_point(aes(colour=m))+
facet_grid(cols = vars(Method))+
xlab("Signal Strength")+
ylab("Sensitivity")+
theme_bw()+
labs(colour = "Sample Size")+
ylim(0.8,1)+
theme()
ggsave("Fig5a.png", units="in", width=13, height=2, dpi=300)
# Figure 5b
files = list.files(path = "../table/t/", pattern = "\\_FDR.csv$", full.names = TRUE)
table = NULL
for(i in 1:length(files)){
if(is.null(table)){
table = FDR.table(files[i],method[i])
}else{
table = rbind(table,FDR.table(files[i],method[i]))
}
}
table$Method = factor(table$Method,level = c('RSim','Unnormalized','CSS','MED','TMM','TSS','UQ','GMPR'))
ggplot(data=table, aes(x= lambda, y = FDR, group = m))+
geom_line(linetype = "solid",aes(colour=m))+
geom_point(aes(colour=m))+                    # Thinner lines
facet_grid(cols = vars(Method))+    # Set legend title
xlab("Signal Strength")+
ylab("FDR")+
theme_bw()+
ylim(0,1)+
geom_hline(yintercept=0.1, linetype="dashed",
color = "black", size=0.5)+
labs(colour = "Sample Size")
ggsave("Fig5b.png", units="in", width=13, height=2, dpi=300)
sensitivity.table = function(X,method){
X1 = read.csv(X)[,-1]
res1 = data.frame(Sensitivity = c(t(X1[1,]),t(X1[2,]),t(X1[3,])))
res1$lambda = c(50,100,150)
res1$m = as.factor(c(rep(200,3),rep(350,3),rep(500,3)))
res1$Method = method
return(res1)
}
FDR.table = function(X,method){
X1 = read.csv(X)[,-1]
res1 = data.frame(FDR = c(t(X1[1,]),t(X1[2,]),t(X1[3,])))
res1$lambda = c(50,100,150)
res1$m = as.factor(c(rep(200,3),rep(350,3),rep(500,3)))
res1$Method = method
return(res1)
}
# Figure 5c
files = list.files(path = "../table/pearson/", pattern = "\\_sensitivity.csv$", full.names = TRUE)
table = NULL
for(i in 1:length(files)){
if(is.null(table)){
table = sensitivity.table(files[i],method[i])
}else{
table = rbind(table,sensitivity.table(files[i],method[i]))
}
}
table$Method = factor(table$Method,level = c('RSim','Unnormalized','CSS','MED','TMM','TSS','UQ','GMPR'))
ggplot(data=table, aes(x= lambda, y = Sensitivity, group = m))+
geom_line(linetype = "solid",aes(colour=m))+
geom_point(aes(colour=m))+                    # Thinner lines
facet_grid(cols = vars(Method))+    # Set legend title
xlab("Signal Strength")+
ylab("Sensitivity")+
theme_bw()+
labs(colour = "Sample Size")+
theme(legend.text = element_text(size=5))
ggsave("Fig5c.png", units="in", width=13, height=2, dpi=300)
# Figure 5d
files = list.files(path = "../table/pearson/", pattern = "\\_FDR.csv$", full.names = TRUE)
table = NULL
for(i in 1:length(files)){
if(is.null(table)){
table = FDR.table(files[i],method[i])
}else{
table = rbind(table,FDR.table(files[i],method[i]))
}
}
table$Method = factor(table$Method,level = c('RSim','Unnormalized','CSS','MED','TMM','TSS','UQ','GMPR'))
ggplot(data=table, aes(x= lambda, y = FDR, group = m))+
geom_line(linetype = "solid",aes(colour=m))+
geom_point(aes(colour=m))+                    # Thinner lines
facet_grid(cols = vars(Method))+    # Set legend title
xlab("Signal Strength")+
ylab("FDR")+
ylim(0,1)+
theme_bw()+
geom_hline(yintercept=0.1, linetype="dashed",
color = "black", size=0.5)+
labs(colour = "Sample Size")+
theme(legend.text = element_text(size=5))
ggsave("Fig5d.png", units="in", width=13, height=2, dpi=300)

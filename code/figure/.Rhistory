theme_bw()
library(ggplot2)
library(latex2exp)
## Figure: eta(1200/400)
eta1 = as.data.frame(t(read.csv("../table/accuracy/eta_1.csv")[,-1]))
eta2 = as.data.frame(t(read.csv('../table/accuracy/eta_2.csv')[,-1]))
eta3 = as.data.frame(t(read.csv('../table/accuracy/eta_3.csv')[,-1]))
eta1$Error = "Empirical Misclassification Rate"
eta1$eta = seq(0,0.1,0.01)
eta1 = eta1[-1,]
eta2$Error = "Empirical Misclassification Rate"
eta2$eta = seq(0,0.1,0.01)
eta2 = eta2[-1,]
w = data.frame('V1' = seq(0.01,0.1,0.01))
w$eta = seq(0.01,0.1,0.01)
w$Error = "Target Misclassification Rate"
eta1 = rbind(eta1,w)
eta2 = rbind(eta2,w)
eta1$setting = "Setting 1"
eta2$setting = "Setting 2"
eta3$Error = "Empirical Misclassification Rate"
eta3$eta = seq(0,0.1,0.01)
eta3 = eta3[-1,]
eta3 = rbind(eta3,w)
eta3$setting = "Setting 3"
eta.data = rbind(eta1,eta2,eta3)
ggplot(data=eta.data, aes(x= eta, y = V1, group = Error))+
geom_line(linetype = "dashed",aes(color = Error))+
geom_point(aes(color = Error))+
facet_grid(cols = vars(setting))+
ylim(0,0.3)+
xlab("Target Misclassification Rate")+
ylab("Misclassification Rate")+
theme_bw()
# Figure S2
effect_size <- read.csv('../table/accuracy/lambda.csv')
colnames(effect_size) = c('Value','error')
u <- read.csv('../table/accuracy/dag.csv')[-1]
# Figure S2
effect_size <- read.csv('../table/accuracy/lambda.csv')
colnames(effect_size) = c('Value','error')
u <- read.csv('../table/accuracy/dag.csv')[-1]
dagfrac = data.frame('error' = as.numeric(u[1,]))
dagfrac$Value = seq(0.1,0.5,0.1)
# Figure S2
effect_size <- read.csv('../table/accuracy/lambda.csv')
colnames(effect_size) = c('Value','error')
u <- read.csv('../table/accuracy/dag.csv')[-1]
dagfrac = data.frame('error' = as.numeric(u[1,]))
dagfrac$Value = seq(0.1,0.5,0.1)
size <- read.csv('../table/accuracy/Size.csv')[-1,]
size[,1] = c(100,300,500)
colnames(size) = c('Value','error')
uneven <- read.csv('../table/accuracy/uneven.csv')
uneven[,1] = seq(0.1,0.4,0.1)
colnames(uneven) = c('Value','error')
p1 = ggplot(data=effect_size, aes(x= Value, y = error))+
geom_line(linetype = "dashed",color = "#FF9999")+
geom_point(color = "#FF9999")+
ylim(0,0.05)+
xlab("Signal Strength")+
ylab("Misclassification Rate")+
scale_x_continuous(expand = expansion(mult = .2))+
theme_bw()
p2 = ggplot(data=dagfrac, aes(x= Value, y = error))+
geom_line(linetype = "dashed",color = "#FF9999")+
geom_point(color = "#FF9999")+
ylim(0,0.05)+
xlab("Proportion of Differential Abundant Taxa")+
ylab("Misclassification Rate")+
scale_x_continuous(expand = expansion(mult = .2))+
theme_bw()
p3 = ggplot(data=size, aes(x= Value, y = error))+
geom_line(linetype = "dashed",color = "#FF9999")+
geom_point(color = "#FF9999")+
ylim(0,0.05)+
xlab("Sample Size")+
ylab("Misclassification Rate")+
scale_x_continuous(expand = expansion(mult = .2))+
theme_bw()
p4 = ggplot(data=size, aes(x= Value, y = error))+
geom_line(linetype = "dashed",color = "#FF9999")+
geom_point(color = "#FF9999")+
ylim(0,0.05)+
xlab("Group 1 Size:Group 2 Size")+
ylab("Misclassification Rate")+
scale_x_continuous(expand = expansion(mult = .2))+
theme_bw()
p = p1+p2+p3+p4
library(ggplot2)
library(latex2exp)
# Figure S2
effect_size <- read.csv('../table/accuracy/lambda.csv')
colnames(effect_size) = c('Value','error')
u <- read.csv('../table/accuracy/dag.csv')[-1]
dagfrac = data.frame('error' = as.numeric(u[1,]))
dagfrac$Value = seq(0.1,0.5,0.1)
size <- read.csv('../table/accuracy/Size.csv')[-1,]
size[,1] = c(100,300,500)
colnames(size) = c('Value','error')
uneven <- read.csv('../table/accuracy/uneven.csv')
uneven[,1] = seq(0.1,0.4,0.1)
colnames(uneven) = c('Value','error')
p1 = ggplot(data=effect_size, aes(x= Value, y = error))+
geom_line(linetype = "dashed",color = "#FF9999")+
geom_point(color = "#FF9999")+
ylim(0,0.05)+
xlab("Signal Strength")+
ylab("Misclassification Rate")+
scale_x_continuous(expand = expansion(mult = .2))+
theme_bw()
p2 = ggplot(data=dagfrac, aes(x= Value, y = error))+
geom_line(linetype = "dashed",color = "#FF9999")+
geom_point(color = "#FF9999")+
ylim(0,0.05)+
xlab("Proportion of Differential Abundant Taxa")+
ylab("Misclassification Rate")+
scale_x_continuous(expand = expansion(mult = .2))+
theme_bw()
p3 = ggplot(data=size, aes(x= Value, y = error))+
geom_line(linetype = "dashed",color = "#FF9999")+
geom_point(color = "#FF9999")+
ylim(0,0.05)+
xlab("Sample Size")+
ylab("Misclassification Rate")+
scale_x_continuous(expand = expansion(mult = .2))+
theme_bw()
p4 = ggplot(data=size, aes(x= Value, y = error))+
geom_line(linetype = "dashed",color = "#FF9999")+
geom_point(color = "#FF9999")+
ylim(0,0.05)+
xlab("Group 1 Size:Group 2 Size")+
ylab("Misclassification Rate")+
scale_x_continuous(expand = expansion(mult = .2))+
theme_bw()
p = p1+p2+p3+p4
library(ggplot2)
library(latex2exp)
library(patchwork)
# Figure S2
effect_size <- read.csv('../table/accuracy/lambda.csv')
colnames(effect_size) = c('Value','error')
u <- read.csv('../table/accuracy/dag.csv')[-1]
dagfrac = data.frame('error' = as.numeric(u[1,]))
dagfrac$Value = seq(0.1,0.5,0.1)
size <- read.csv('../table/accuracy/Size.csv')[-1,]
size[,1] = c(100,300,500)
colnames(size) = c('Value','error')
uneven <- read.csv('../table/accuracy/uneven.csv')
uneven[,1] = seq(0.1,0.4,0.1)
colnames(uneven) = c('Value','error')
p1 = ggplot(data=effect_size, aes(x= Value, y = error))+
geom_line(linetype = "dashed",color = "#FF9999")+
geom_point(color = "#FF9999")+
ylim(0,0.05)+
xlab("Signal Strength")+
ylab("Misclassification Rate")+
scale_x_continuous(expand = expansion(mult = .2))+
theme_bw()
p2 = ggplot(data=dagfrac, aes(x= Value, y = error))+
geom_line(linetype = "dashed",color = "#FF9999")+
geom_point(color = "#FF9999")+
ylim(0,0.05)+
xlab("Proportion of Differential Abundant Taxa")+
ylab("Misclassification Rate")+
scale_x_continuous(expand = expansion(mult = .2))+
theme_bw()
p3 = ggplot(data=size, aes(x= Value, y = error))+
geom_line(linetype = "dashed",color = "#FF9999")+
geom_point(color = "#FF9999")+
ylim(0,0.05)+
xlab("Sample Size")+
ylab("Misclassification Rate")+
scale_x_continuous(expand = expansion(mult = .2))+
theme_bw()
p4 = ggplot(data=size, aes(x= Value, y = error))+
geom_line(linetype = "dashed",color = "#FF9999")+
geom_point(color = "#FF9999")+
ylim(0,0.05)+
xlab("Group 1 Size:Group 2 Size")+
ylab("Misclassification Rate")+
scale_x_continuous(expand = expansion(mult = .2))+
theme_bw()
p = p1+p2+p3+p4
p + plot_layout(ncol = 2,guides = "collect")& theme(legend.position = "bottom")
sf.table = function(X,method){
X1 = read.csv(X)[,-1]
res1 = data.frame(Bias = c(t(abs(X1[1,])),t(abs(X1[2,])),t(abs(X1[3,]))))
res1$lambda = c(1,10,100)
res1$p = as.factor(c(rep("p=0.1",3),rep("p=0.2",3),rep("p=0.3",3)))
res1$Method = method
return(res1)
}
# sf
files = list.files(path = "../table/sampling_fraction/", full.names = TRUE)
table = NULL
method = c('CSS','MED','RSim','TMM','TSS','UQ')
for(i in 1:length(files)){
if(is.null(table)){
table = sf.table(files[i],method[i])
}else{
table = rbind(table,sf.table(files[i],method[i]))
}
}
# bias(782/301)
ggplot(data=table, aes(x=as.factor(lambda), y=Bias, fill=Method))+
geom_bar(stat="identity",
position=position_dodge(),
size=.1,
) +                        # Thinner lines
scale_fill_brewer(palette = "Set2")+
facet_grid(cols = vars(p))+    # Set legend title
xlab("Signal Strength") +
ylab("Bias")+
coord_flip()+
theme_bw()+
#geom_hline(yintercept=0, linetype="dashed", color = "red", size=0.5)+
theme(legend.text = element_text(size=10))
sensitivity.table = function(X,method){
X1 = read.csv(X)[,-1]
res1 = data.frame(Sensitivity = c(t(X1[1,]),t(X1[2,]),t(X1[3,])))
res1$lambda = c(100,200,300)
res1$m = as.factor(c(rep(100,3),rep(200,3),rep(300,3)))
res1$Method = method
return(res1)
}
FDR.table = function(X,method){
X1 = read.csv(X)[,-1]
res1 = data.frame(FDR = c(t(X1[1,]),t(X1[2,]),t(X1[3,])))
res1$lambda = c(100,200,300)
res1$m = as.factor(c(rep(100,3),rep(200,3),rep(300,3)))
res1$Method = method
return(res1)
}
# Figure 5a
files = list.files(path = "../table/t/", pattern = "\\_sensitivity.csv$", full.names = TRUE)
table = NULL
method = c('CSS','MED','Unnormalized','RSim','TMM','TSS','UQ')
for(i in 1:length(files)){
if(is.null(table)){
table = sensitivity.table(files[i],method[i])
}else{
table = rbind(table,sensitivity.table(files[i],method[i]))
}
}
ggplot(data=table, aes(x= lambda, y = Sensitivity, group = m))+
geom_line(linetype = "solid",aes(colour=m))+
geom_point(aes(colour=m))+
facet_grid(cols = vars(Method))+
xlab("Signal Strength")+
ylab("Sensitivity")+
theme_bw()+
labs(colour = "Sample Size")+
ylim(0.8,1)+
theme(legend.text = element_text(size=5))
# Figure 5b
files = list.files(path = "../table/t/", pattern = "\\_FDR.csv$", full.names = TRUE)
table = NULL
for(i in 1:length(files)){
if(is.null(table)){
table = FDR.table(files[i],method[i])
}else{
table = rbind(table,FDR.table(files[i],method[i]))
}
}
ggplot(data=table, aes(x= lambda, y = FDR, group = m))+
geom_line(linetype = "solid",aes(colour=m))+
geom_point(aes(colour=m))+                    # Thinner lines
facet_grid(cols = vars(Method))+    # Set legend title
xlab("Signal Strength")+
ylab("FDR")+
theme_bw()+
ylim(0,1)+
geom_hline(yintercept=0.1, linetype="dashed",
color = "black", size=0.5)+
labs(colour = "Sample Size")+
theme(legend.text = element_text(size=5))
sensitivity.table = function(X,method){
X1 = read.csv(X)[,-1]
res1 = data.frame(Sensitivity = c(t(X1[1,]),t(X1[2,]),t(X1[3,])))
res1$lambda = c(50,100,150)
res1$m = as.factor(c(rep(200,3),rep(350,3),rep(500,3)))
res1$Method = method
return(res1)
}
FDR.table = function(X,method){
X1 = read.csv(X)[,-1]
res1 = data.frame(FDR = c(t(X1[1,]),t(X1[2,]),t(X1[3,])))
res1$lambda = c(50,100,150)
res1$m = as.factor(c(rep(200,3),rep(350,3),rep(500,3)))
res1$Method = method
return(res1)
}
# Figure 5c
files = list.files(path = "../table/pearson/", pattern = "\\_sensitivity.csv$", full.names = TRUE)
table = NULL
for(i in 1:length(files)){
if(is.null(table)){
table = sensitivity.table(files[i],method[i])
}else{
table = rbind(table,sensitivity.table(files[i],method[i]))
}
}
ggplot(data=table, aes(x= lambda, y = Sensitivity, group = m))+
geom_line(linetype = "solid",aes(colour=m))+
geom_point(aes(colour=m))+                    # Thinner lines
facet_grid(cols = vars(Method))+    # Set legend title
xlab("Signal Strength")+
ylab("Sensitivity")+
theme_bw()+
labs(colour = "Sample Size")+
theme(legend.text = element_text(size=5))
# Figure 5d
files = list.files(path = "./table/pearson/", pattern = "\\_FDR.csv$", full.names = TRUE)
table = NULL
for(i in 1:length(files)){
if(is.null(table)){
table = FDR.table(files[i],method[i])
}else{
table = rbind(table,FDR.table(files[i],method[i]))
}
}
# Figure 5d
files = list.files(path = "../table/pearson/", pattern = "\\_FDR.csv$", full.names = TRUE)
table = NULL
for(i in 1:length(files)){
if(is.null(table)){
table = FDR.table(files[i],method[i])
}else{
table = rbind(table,FDR.table(files[i],method[i]))
}
}
ggplot(data=table, aes(x= lambda, y = FDR, group = m))+
geom_line(linetype = "solid",aes(colour=m))+
geom_point(aes(colour=m))+                    # Thinner lines
facet_grid(cols = vars(Method))+    # Set legend title
xlab("Signal Strength")+
ylab("FDR")+
ylim(0,1)+
theme_bw()+
geom_hline(yintercept=0.1, linetype="dashed",
color = "black", size=0.5)+
labs(colour = "Sample Size")+
theme(legend.text = element_text(size=5))
#
ds_mirk = read.csv('../table/twosample/ds-mirk1.csv')[-8,-1]
ds_perm = read.csv('../table/twosample/ds-perm1.csv')[-8,-1]
res1 = c()
res2 = c()
for(k in 1:ncol(ds_perm)){
res1 = c(res1,ds_perm[,k])
res2 = c(res2,ds_mirk[,k])
}
res1 = data.frame('Power'=res1)
res2 = data.frame('Power'=res2)
res1$Method =  rep(c('Unnormalized', 'RSim', 'CSS', 'MED', 'TMM', 'TSS', 'UQ'),ncol(ds_perm))
res2$Method =  rep(c('Unnormalized', 'RSim', 'CSS', 'MED', 'TMM', 'TSS', 'UQ'),ncol(ds_perm))
k = 7
res1$m = c(rep(100,k),rep(300,k),rep(500,k))
res2$m = c(rep(100,k),rep(300,k),rep(500,k))
res1$Test = rep('PERMANOVA',3*k)
res2$Test = rep('MiRKAT',3*k)
res = rbind(res1,res2)
ggplot(data=res, aes(x=as.factor(m), y=Power, fill=Method))+
geom_bar(stat="identity",
position=position_dodge(),
size=.3,
) +                        # Thinner lines
scale_fill_brewer(palette = "Set2")+
facet_grid(cols = vars(Test))+    # Set legend title
xlab("Sample size") +
ylab("Power")+
coord_flip()+
theme_bw()+
theme(legend.text = element_text(size=10))
#ggsave('../plot/IT_power1.png' )
#
ds_mirk = read.csv('../table/twosample/ds-mirk2.csv')[-8,-1]
ds_perm = read.csv('../table/twosample/ds-perm2.csv')[-8,-1]
res1 = c()
res2 = c()
for(k in 1:ncol(ds_perm)){
res1 = c(res1,ds_perm[,k])
res2 = c(res2,ds_mirk[,k])
}
res1 = data.frame('Power'=res1)
res2 = data.frame('Power'=res2)
res1$Method =  rep(c('Unnormalized', 'RSim', 'CSS', 'MED', 'TMM', 'TSS', 'UQ'),ncol(ds_perm))
res2$Method =  rep(c('Unnormalized', 'RSim', 'CSS', 'MED', 'TMM', 'TSS', 'UQ'),ncol(ds_perm))
k = 7
res1$m = c(rep(100,k),rep(300,k),rep(500,k))
res2$m = c(rep(100,k),rep(300,k),rep(500,k))
res1$Test = rep('PERMANOVA',3*k)
res2$Test = rep('MiRKAT',3*k)
res = rbind(res1,res2)
#
ds_mirk = read.csv('../table/twosample/ds-mirk2.csv')[-8,-1]
ds_perm = read.csv('../table/twosample/ds-perm2.csv')[-8,-1]
res1 = c()
res2 = c()
for(k in 1:ncol(ds_perm)){
res1 = c(res1,ds_perm[,k])
res2 = c(res2,ds_mirk[,k])
}
res1 = data.frame('Power'=res1)
res2 = data.frame('Power'=res2)
res1$Method =  rep(c('Unnormalized', 'RSim', 'CSS', 'MED', 'TMM', 'TSS', 'UQ'),ncol(ds_perm))
res2$Method =  rep(c('Unnormalized', 'RSim', 'CSS', 'MED', 'TMM', 'TSS', 'UQ'),ncol(ds_perm))
k = 7
res1$m = c(rep(100,k),rep(300,k),rep(500,k))
res2$m = c(rep(100,k),rep(300,k),rep(500,k))
res1$Test = rep('PERMANOVA',3*k)
res2$Test = rep('MiRKAT',3*k)
res = rbind(res1,res2)
ggplot(data=res, aes(x=as.factor(m), y=Power, fill=Method))+
geom_bar(stat="identity",
position=position_dodge(),
size=.3,
) +                        # Thinner lines
scale_fill_brewer(palette = "Set2")+
facet_grid(cols = vars(Test))+    # Set legend title
xlab("Sample size") +
ylab("Power")+
coord_flip()+
theme_bw()+
theme(legend.text = element_text(size=10))
#ggsave('../plot/IT_power2.png' )
# Figure S5b
ds_mirk = read.csv('../table/twosample/ds-mirk3.csv')[-8,-1]
ds_perm = read.csv('../table/twosample/ds-perm3.csv')[-8,-1]
res1 = c()
res2 = c()
for(k in 1:ncol(ds_perm)){
res1 = c(res1,ds_perm[,k])
res2 = c(res2,ds_mirk[,k])
}
res1 = data.frame('Power'=res1)
res2 = data.frame('Power'=res2)
res1$Method =  rep(c('Unnormalized', 'RSim', 'CSS', 'MED', 'TMM', 'TSS', 'UQ'),ncol(ds_perm))
res2$Method =  rep(c('Unnormalized', 'RSim', 'CSS', 'MED', 'TMM', 'TSS', 'UQ'),ncol(ds_perm))
k = 7
res1$m = c(rep(100,k),rep(300,k),rep(500,k))
res2$m = c(rep(100,k),rep(300,k),rep(500,k))
res1$Test = rep('PERMANOVA',3*k)
res2$Test = rep('MiRKAT',3*k)
res = rbind(res1,res2)
# Figure S5b
ds_mirk = read.csv('../table/twosample/ds-mirk3.csv')[-8,-1]
ds_perm = read.csv('../table/twosample/ds-perm3.csv')[-8,-1]
res1 = c()
res2 = c()
for(k in 1:ncol(ds_perm)){
res1 = c(res1,ds_perm[,k])
res2 = c(res2,ds_mirk[,k])
}
res1 = data.frame('Power'=res1)
res2 = data.frame('Power'=res2)
res1$Method =  rep(c('Unnormalized', 'RSim', 'CSS', 'MED', 'TMM', 'TSS', 'UQ'),ncol(ds_perm))
res2$Method =  rep(c('Unnormalized', 'RSim', 'CSS', 'MED', 'TMM', 'TSS', 'UQ'),ncol(ds_perm))
k = 7
res1$m = c(rep(100,k),rep(300,k),rep(500,k))
res2$m = c(rep(100,k),rep(300,k),rep(500,k))
res1$Test = rep('PERMANOVA',3*k)
res2$Test = rep('MiRKAT',3*k)
res = rbind(res1,res2)
ggplot(data=res, aes(x=as.factor(m), y=Power, fill=Method))+
geom_bar(stat="identity",
position=position_dodge(),
size=.3,
) +                        # Thinner lines
scale_fill_brewer(palette = "Set2")+
facet_grid(cols = vars(Test))+    # Set legend title
xlab("Sample size") +
ylab("Power")+
coord_flip()+
theme_bw()+
theme(legend.text = element_text(size=10))
##ggsave('../plot/IT_power3.png' )
# Figure 4a
ds_mirk = read.csv('../table/twosample/sc-mirk.csv')[,-1]
ds_perm = read.csv('../table/twosample/sc-perm.csv')[,-1]
ds_mirk = ds_mirk[-8,]
ds_perm = ds_perm[-8,]
res1 = c()
res2 = c()
for(k in 1:ncol(ds_perm)){
res1 = c(res1,ds_perm[,k])
res2 = c(res2,ds_mirk[,k])
}
res1 = data.frame('Power'=res1)
res2 = data.frame('Power'=res2)
res1$Method =  rep(c('Unnormalized', 'RSim', 'CSS', 'MED', 'TMM', 'TSS', 'UQ'),ncol(ds_perm))
res2$Method =  rep(c('Unnormalized', 'RSim', 'CSS', 'MED', 'TMM', 'TSS', 'UQ'),ncol(ds_perm))
res1$c = c(rep(1,7),rep(2,7),rep(3,7))
res2$c = c(rep(1,7),rep(2,7),rep(3,7))
res1$Test = rep('PERMANOVA',21)
res2$Test = rep('MiRKAT',21)
res = rbind(res1,res2)
## plot
ggplot(data=res, aes(x=as.factor(c), y=Power, fill=Method))+
geom_bar(stat="identity",
position=position_dodge(),
size=.3) +                        # Thinner lines
scale_fill_brewer(palette = "Set2")+
facet_grid(cols = vars(Test))+    # Set legend title
xlab("Sampling Fraction Difference") +
ylab("Type I Error")+
coord_flip()+
theme_bw()+
theme(legend.text = element_text(size=10))+
geom_hline(yintercept=0.05, linetype="dashed",
color = "red", size=1)

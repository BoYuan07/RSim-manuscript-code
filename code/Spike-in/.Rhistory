est = data.frame('rsim' = f.cn, 'Salini' = Salini, 'Ali' = Ali.t, 'Rhiz' = Rhiz.t,'librarysize' = colSums(scml.OTUs.trim))
colnames(est) = c('rsim','Salini','Ali','Rhiz','background')
est$rsim = est$rsim/sum(est$rsim)
est$Salini = est$Salini/sum(est$Salini)
est$Ali = est$Ali/sum(est$Ali)
est$Rhiz = est$Rhiz/sum(est$Rhiz)
est$background = est$background/sum(est$background)
ggplot(est,aes(x = Salini, y = rsim))+
geom_point()+
geom_abline(slope = 1)+
ylim(0,0.2)
ggplot(est,aes(x = background, y = rsim))+
geom_point()+
geom_abline(slope = 1)+
ylim(0,0.2)
ggplot(est,aes(x = Salini, y = background))+
geom_point()+
geom_abline(slope = 1)+
ylim(0,0.2)
max(rowSums(scml.OTUs.trim.rm))
rowS = rowSums(scml.OTUs.trim)
rowS = as.data.frame(rowS)
View(rowS)
library(ggplot2)
Ali.t = Ali/t(designConc[1,])
Rhiz.t = Rhiz/t(designConc[3,])
est = data.frame('rsim' = f.cn, 'Salini' = Salini, 'Ali' = Ali.t, 'Rhiz' = Rhiz.t,'librarysize' = colSums(scml.OTUs.trim.rm))
colnames(est) = c('rsim','Salini','Ali','Rhiz','background')
est$rsim = est$rsim/sum(est$rsim)
est$Salini = est$Salini/sum(est$Salini)
est$Ali = est$Ali/sum(est$Ali)
est$Rhiz = est$Rhiz/sum(est$Rhiz)
est$background = est$background/sum(est$background)
ggplot(est,aes(x = Salini, y = rsim))+
geom_point()+
geom_abline(slope = 1)+
ylim(0,0.2)
ggplot(est,aes(x = Salini, y = background))+
geom_point()+
geom_abline(slope = 1)+
ylim(0,0.2)
library(ggplot2)
Ali.t = Ali/t(designConc[1,])
Rhiz.t = Rhiz/t(designConc[3,])
est = data.frame('rsim' = f.cn, 'Salini' = Salini, 'Ali' = Ali.t, 'Rhiz' = Rhiz.t,'background' = scml.meta.trim$Background)
colnames(est) = c('rsim','Salini','Ali','Rhiz','background')
est$rsim = est$rsim/sum(est$rsim)
est$Salini = est$Salini/sum(est$Salini)
est$Ali = est$Ali/sum(est$Ali)
est$Rhiz = est$Rhiz/sum(est$Rhiz)
est$background = est$background/sum(est$background)
ggplot(est,aes(x = Salini, y = rsim))+
geom_point()+
geom_abline(slope = 1)+
ylim(0,0.2)
library(ggplot2)
Ali.t = Ali/t(designConc[1,])
Rhiz.t = Rhiz/t(designConc[3,])
est = data.frame('rsim' = f.cn, 'Salini' = Salini, 'Ali' = Ali.t, 'Rhiz' = Rhiz.t,'background' = scml.meta.trim$Background)
colnames(est) = c('rsim','Salini','Ali','Rhiz','background')
est$rsim = est$rsim/sum(est$rsim)
est$Salini = est$Salini/sum(est$Salini)
est$Ali = est$Ali/sum(est$Ali)
est$Rhiz = est$Rhiz/sum(est$Rhiz)
est$background = est$background/sum(est$background)
ggplot(est,aes(x = background, y = rsim))+
geom_point()+
geom_abline(slope = 1)+
ylim(0,0.2)
ggplot(est,aes(x = background, y = Salini))+
geom_point()+
geom_abline(slope = 1)+
ylim(0,0.2)
ratio.table = data.frame('ratio'=c(est$Ali/est$background, est$Salini/est$background, est$Rhiz/est$background, est$rsim/est$background),'group' = c(rep('Ali',length(est$rsim)),rep('Salini',length(est$rsim)),rep('Rhiz',length(est$rsim)), rep('Background',length(est$rsim))))
p <- ggplot(ratio.table, aes(x=group, y=ratio)) +
geom_boxplot()+
geom_abline(slope = 0, intercept = 1, color = 'red')+
ylim(0,5)
p
library(ggplot2)
library(latex2exp)
library(patchwork)
sf.table = function(X,method){
X1 = read.csv(X)[,-1]
res1 = data.frame(Bias = c(t(abs(X1[1,])),t(abs(X1[2,])),t(abs(X1[3,]))))
res1$lambda = c(1,10,100)
res1$p = as.factor(c(rep("p=0.1",3),rep("p=0.2",3),rep("p=0.3",3)))
res1$Method = method
return(res1)
}
# sf
files = list.files(path = "../table/sampling_fraction/", full.names = TRUE)
files
table = NULL
method = c('CSS','GMPR','MED','RSim','TMM','TSS','UQ')
for(i in 1:length(files)){
if(is.null(table)){
table = sf.table(files[i],method[i])
}else{
table = rbind(table,sf.table(files[i],method[i]))
}
}
# Figure 2d
table$Method = factor(table$Method,level = c('RSim','CSS','MED','TMM','TSS','UQ','GMPR'))
ggplot(data=table, aes(x=as.factor(lambda), y=Bias, fill=Method))+
geom_bar(stat="identity",
position=position_dodge(),
size=.1,
) +                        # Thinner lines
scale_fill_brewer(palette = "Set2")+
facet_grid(cols = vars(p))+    # Set legend title
xlab("Signal Strength") +
ylab("Bias")+
coord_flip()+
theme_bw()+
#geom_hline(yintercept=0, linetype="dashed", color = "red", size=0.5)+
theme(legend.text = element_text(size=10))
# Figure S5a
ds_mirk = read.csv('../table/twosample/strongsig-mirk.csv')[-10,-1]
ds_perm = read.csv('../table/twosample/strongsig-perm.csv')[-10,-1]
res1 = c()
res2 = c()
for(k in 1:ncol(ds_perm)){
res1 = c(res1,ds_perm[,k])
res2 = c(res2,ds_mirk[,k])
}
res1 = data.frame('Power'=res1)
res2 = data.frame('Power'=res2)
res1$Method =  rep(c('RSim','Unnormalized','CSS','MED','TMM','TSS','UQ','GMPR','Rarefaction'),ncol(ds_perm))
res2$Method =  rep(c('RSim','Unnormalized','CSS','MED','TMM','TSS','UQ','GMPR','Rarefaction'),ncol(ds_perm))
k = 9
res1$m = c(rep(100,k),rep(300,k),rep(500,k))
res2$m = c(rep(100,k),rep(300,k),rep(500,k))
res1$Test = rep('PERMANOVA',3*k)
res2$Test = rep('MiRKAT',3*k)
res = rbind(res1,res2)
res$Method = factor(res$Method,level = c('RSim','Unnormalized','CSS','MED','TMM','TSS','UQ','GMPR','Rarefaction'))
ggplot(data=res, aes(x=as.factor(m), y=Power, fill=Method))+
geom_bar(stat="identity",
position=position_dodge(),
size=.3,
) +                        # Thinner lines
scale_fill_brewer(palette = "Set3")+
facet_grid(cols = vars(Test))+    # Set legend title
xlab("Sample size") +
ylab("Power")+
coord_flip()+
theme_bw()+
theme(legend.text = element_text(size=10))
#ggsave('../plot/IT_power1.png' )
# Figure 4b
ds_mirk = read.csv('../table/twosample/weaksig-mirk.csv')[-10,-1]
ds_perm = read.csv('../table/twosample/weaksig-perm.csv')[-10,-1]
res1 = c()
res2 = c()
for(k in 1:ncol(ds_perm)){
res1 = c(res1,ds_perm[,k])
res2 = c(res2,ds_mirk[,k])
}
res1 = data.frame('Power'=res1)
res2 = data.frame('Power'=res2)
res1$Method =  rep(c('RSim','Unnormalized','CSS','MED','TMM','TSS','UQ','GMPR','Rarefaction'),ncol(ds_perm))
res2$Method =  rep(c('RSim','Unnormalized','CSS','MED','TMM','TSS','UQ','GMPR','Rarefaction'),ncol(ds_perm))
k = 9
res1$m = c(rep(100,k),rep(300,k),rep(500,k))
res2$m = c(rep(100,k),rep(300,k),rep(500,k))
res1$Test = rep('PERMANOVA',3*k)
res2$Test = rep('MiRKAT',3*k)
res = rbind(res1,res2)
res$Method = factor(res$Method,level = c('RSim','Unnormalized','CSS','MED','TMM','TSS','UQ','GMPR','Rarefaction'))
ggplot(data=res, aes(x=as.factor(m), y=Power, fill=Method))+
geom_bar(stat="identity",
position=position_dodge(),
size=.3,
) +                        # Thinner lines
scale_fill_brewer(palette = "Set3")+
facet_grid(cols = vars(Test))+    # Set legend title
xlab("Sample size") +
ylab("Power")+
coord_flip()+
theme_bw()+
theme(legend.text = element_text(size=10))
#ggsave('../plot/IT_power2.png' )
# Figure S5b
ds_mirk = read.csv('../table/twosample/contsig-mirk.csv')[-10,-1]
ds_perm = read.csv('../table/twosample/contsig-perm.csv')[-10,-1]
res1 = c()
res2 = c()
for(k in 1:ncol(ds_perm)){
res1 = c(res1,ds_perm[,k])
res2 = c(res2,ds_mirk[,k])
}
res1 = data.frame('Power'=res1)
res2 = data.frame('Power'=res2)
res1$Method =  rep(c('RSim','Unnormalized','CSS','MED','TMM','TSS','UQ','GMPR','Rarefy'),ncol(ds_perm))
res2$Method =  rep(c('RSim','Unnormalized','CSS','MED','TMM','TSS','UQ','GMPR','Rarefy'),ncol(ds_perm))
k = 9
res1$m = c(rep(100,k),rep(300,k),rep(500,k))
res2$m = c(rep(100,k),rep(300,k),rep(500,k))
res1$Test = rep('PERMANOVA',3*k)
res2$Test = rep('MiRKAT',3*k)
res = rbind(res1,res2)
res$Method = factor(res$Method,level = c('RSim','Unnormalized','CSS','MED','TMM','TSS','UQ','GMPR','Rarefy'))
ggplot(data=res, aes(x=as.factor(m), y=Power, fill=Method))+
geom_bar(stat="identity",
position=position_dodge(),
size=.3,
) +                        # Thinner lines
scale_fill_brewer(palette = "Set3")+
facet_grid(cols = vars(Test))+    # Set legend title
xlab("Sample size") +
ylab("Power")+
coord_flip()+
theme_bw()+
theme(legend.text = element_text(size=10))
##ggsave('../plot/IT_power3.png' )
# Figure S5b
ds_mirk = read.csv('../table/twosample/contsig-mirk.csv')[-10,-1]
ds_perm = read.csv('../table/twosample/contsig-perm.csv')[-10,-1]
res1 = c()
res2 = c()
for(k in 1:ncol(ds_perm)){
res1 = c(res1,ds_perm[,k])
res2 = c(res2,ds_mirk[,k])
}
res1 = data.frame('Power'=res1)
res2 = data.frame('Power'=res2)
res1$Method =  rep(c('RSim','Unnormalized','CSS','MED','TMM','TSS','UQ','GMPR','Rarefaction'),ncol(ds_perm))
res2$Method =  rep(c('RSim','Unnormalized','CSS','MED','TMM','TSS','UQ','GMPR','Rarefaction'),ncol(ds_perm))
k = 9
res1$m = c(rep(100,k),rep(300,k),rep(500,k))
res2$m = c(rep(100,k),rep(300,k),rep(500,k))
res1$Test = rep('PERMANOVA',3*k)
res2$Test = rep('MiRKAT',3*k)
res = rbind(res1,res2)
res$Method = factor(res$Method,level = c('RSim','Unnormalized','CSS','MED','TMM','TSS','UQ','GMPR','Rarefaction'))
ggplot(data=res, aes(x=as.factor(m), y=Power, fill=Method))+
geom_bar(stat="identity",
position=position_dodge(),
size=.3,
) +                        # Thinner lines
scale_fill_brewer(palette = "Set3")+
facet_grid(cols = vars(Test))+    # Set legend title
xlab("Sample size") +
ylab("Power")+
coord_flip()+
theme_bw()+
theme(legend.text = element_text(size=10))
##ggsave('../plot/IT_power3.png' )
# Figure 4a
ds_mirk = read.csv('../table/twosample/sc-mirk.csv')[,-1]
ds_perm = read.csv('../table/twosample/sc-perm.csv')[,-1]
ds_mirk = ds_mirk[-10,]
ds_perm = ds_perm[-10,]
res1 = c()
res2 = c()
for(k in 1:ncol(ds_perm)){
res1 = c(res1,ds_perm[,k])
res2 = c(res2,ds_mirk[,k])
}
res1 = data.frame('Power'=res1)
res2 = data.frame('Power'=res2)
res1$Method =  rep(c('RSim','Unnormalized','CSS','MED','TMM','TSS','UQ','GMPR','Rarefaction'),ncol(ds_perm))
res2$Method =  rep(c('RSim','Unnormalized','CSS','MED','TMM','TSS','UQ','GMPR','Rarefaction'),ncol(ds_perm))
k = 9
res1$c = c(rep(1,k),rep(2,k),rep(3,k))
res2$c = c(rep(1,k),rep(2,k),rep(3,k))
res1$Test = rep('PERMANOVA',3*k)
res2$Test = rep('MiRKAT',3*k)
res = rbind(res1,res2)
res$Method = factor(res$Method,level = c('RSim','Unnormalized','CSS','MED','TMM','TSS','UQ','GMPR','Rarefaction'))
## plot
ggplot(data=res, aes(x=as.factor(c), y=Power, fill=Method))+
geom_bar(stat="identity",
position=position_dodge(),
size=.3) +                        # Thinner lines
scale_fill_brewer(palette = "Set3")+
facet_grid(cols = vars(Test))+    # Set legend title
xlab("Sampling Fraction Difference") +
ylab("Type I Error")+
coord_flip()+
theme_bw()+
theme(legend.text = element_text(size=10))+
geom_hline(yintercept=0.05, linetype="dashed",
color = "red", size=1)
library(ggplot2)
## ----ImportOTUTable,tidy=F-----------------------------------------------
#Import text formatted OTU Table as derived by biom convert:
scml.OTUs_tax<-read.table("./OTU_Table_wTax_DilutionExperiment.txt",sep="\t",
stringsAsFactors=F,header=TRUE,row.names=1)
#Delete taxonomy column
scml.OTUs<-scml.OTUs_tax[,-37]
## ----CreateTaxaMap-------------------------------------------------------
TaxaMap<-data.frame(OTU=rownames(scml.OTUs),taxonomy=scml.OTUs_tax$taxonomy)
## ----ImportMetaData------------------------------------------------------
#Import MetaData Mapping File
scml.meta<-read.table("./Mapping_DilutionExperiment.txt",sep="\t",header=TRUE)
#Bring OTU table in same order like meta data in respect to sample ID
ord<-match(scml.meta$SampleID,colnames(scml.OTUs))
scml.OTUs<-scml.OTUs[,ord]
## ----DesignConcentration-------------------------------------------------
designConc<-read.table("./designConc_DilutionExperiment.csv",sep="\t",header=TRUE,
row.names=1)
designConc.names<-colnames(designConc)
designConc<-designConc[,-c(which(colnames(designConc)=="Sample.87"),
which(colnames(designConc)=="Sample.88"))]
## ----ExcludeMIDs---------------------------------------------------------
midToExclude<-c("MID39","MID40")
midIDX<-which(colnames(scml.OTUs)%in%midToExclude)
#Exclude MIDs from OTU table and convert to matrix:
scml.OTUs.trim<-as.matrix(scml.OTUs[,-midIDX])
#Exclude MIDs from the mapping table
scml.meta.trim<-scml.meta[-midIDX,]
## ----SpikePositions------------------------------------------------------
#Search unique ID for S. Ruber:
SalPos<-grep("AF323500XXXX",rownames(scml.OTUs.trim))
## ----Spike-in---------------------------------------------------------
Salini<-scml.OTUs.trim[SalPos,]
source("../Algorithm.R")
set.seed(1)
est_sf = est_factor(scml.OTUs.trim, 0.43, 0.3)
methods = unique(est_sf$Method)
for(method in methods){
est_sf$sf.est[est_sf$Method==method] = est_sf$sf.est[est_sf$Method==method]/sum(est_sf$sf.est[est_sf$Method==method])
}
Salini = Salini/sum(Salini)
log.ratio = c()
for(method in methods){
log.ratio = c(log.ratio,abs(mean(log(Salini/est_sf$sf.est[est_sf$Method==method]))))
}
log.ratio = data.frame('Bias' = log.ratio, 'Method' = methods)
log.ratio$Method = factor(log.ratio$Method,levels = c('RSim','CSS','MED','TMM','TSS','UQ','GMPR'))
## plot
ggplot(data=log.ratio, aes(x=Method, y=Bias, fill=Method))+
geom_bar(stat="identity",
position=position_dodge(),
size=.1)+
scale_fill_brewer(palette = "Set2")+
ylab("Discrepancy from Spike-in")+
ylim(0,0.3)+
theme_bw()+
theme(legend.text = element_text(size=10))
library(dplyr)
library(biomformat)
library(stringr)
library(ape)
library(phyloseq)
source("../Algorithm.R")
##data preprocessing
filepath <- "../../data/Vangay/"
folders<-list.files(path = filepath)
filep<-paste(filepath,"/","reference-hit.biom", sep = "")
x = read_biom(filep)
treep<-paste(filepath,"/","insertion_tree.relabelled.tre", sep = "")
treefile = readChar(treep,file.info(treep)$size)
str_count(treefile, pattern = '; ')
treefile2 = gsub('; ','|',treefile)
tree = read.tree(text=treefile2)
nalength=is.na(tree$edge.length)
nonzerolength=tree$edge.length!=0
tree$edge.length[nalength]=sample(tree$edge.length[(!nalength)&nonzerolength], sum(nalength))
sum(tree$edge.length==0 & tree$edge[,2]<=length(tree$tip.label))
meta = read.delim(paste(filepath,"/","12080_20210508-071948.txt", sep = ""))
samplenames <- sapply(x$columns, function(y){y$id})
meta <- meta[meta$sample_name %in% samplenames,]
meta$bmi_class[meta$bmi_class=='Obese'] = 'Overweight'
otu <- sapply(x$rows, function(y){y$id})
drop_tips <- tree$tip.label[!(tree$tip.label %in% otu)]
tree <- ape::drop.tip(tree,drop_tips) %>% ape::as.phylo()
P <- sapply(x$data, function(y,subsamplenames){y[subsamplenames]}, subsamplenames = meta$sample_name)
colnames(P) <- otu
P = t(P)
A = P[rowSums(P)>0,]
# 1000/100
set.seed(1)
A1 = A
A1 = A1[1:1000,]
A1 = A1[rowSums(A1)>0,]
A1 = A1[,colSums(A1)>0]
A1 = A1[,1:100]
result = matrix(0,nrow = 6, ncol = 7)
result[1,1] = system.time(rsim(A1))[1]
result[1,2] = system.time(GMPR(A1))[1]
result[1,3] = system.time(med(A1))[1]
result[1,4] = system.time(css(A1))[1]
result[1,5] = system.time(tmm(A1))[1]
result[1,6] = system.time(tss(A1))[1]
result[1,7] = system.time(uq(A1))[1]
# 1000/500
set.seed(1)
A1 = A
A1 = A1[1:1000,]
A1 = A1[rowSums(A1)>0,]
A1 = A1[,colSums(A1)>0]
A1 = A1[,1:500]
k = 2
result[k,1] = system.time(rsim(A1))[1]
result[k,2] = system.time(GMPR(A1))[1]
result[k,3] = system.time(med(A1))[1]
result[k,4] = system.time(css(A1))[1]
result[k,5] = system.time(tmm(A1))[1]
result[k,6] = system.time(tss(A1))[1]
result[k,7] = system.time(uq(A1))[1]
# 5000/100
set.seed(1)
A1 = A
A1 = A1[1:5000,]
A1 = A1[rowSums(A1)>0,]
A1 = A1[,colSums(A1)>0]
A1 = A1[,1:100]
k = 3
result[k,1] = system.time(rsim(A1))[1]
result[k,2] = system.time(GMPR(A1))[1]
result[k,3] = system.time(med(A1))[1]
result[k,4] = system.time(css(A1))[1]
result[k,5] = system.time(tmm(A1))[1]
result[k,6] = system.time(tss(A1))[1]
result[k,7] = system.time(uq(A1))[1]
# 5000/500
set.seed(1)
A1 = A
A1 = A1[1:5000,]
A1 = A1[rowSums(A1)>0,]
A1 = A1[,colSums(A1)>0]
A1 = A1[,1:500]
k = 4
result[k,1] = system.time(rsim(A1))[1]
result[k,2] = system.time(GMPR(A1))[1]
result[k,3] = system.time(med(A1))[1]
result[k,4] = system.time(css(A1))[1]
result[k,5] = system.time(tmm(A1))[1]
result[k,6] = system.time(tss(A1))[1]
result[k,7] = system.time(uq(A1))[1]
# 10000/100
set.seed(1)
A1 = A
A1 = A1[1:10000,]
A1 = A1[rowSums(A1)>0,]
A1 = A1[,colSums(A1)>0]
A1 = A1[,1:100]
k = 5
result[k,1] = system.time(rsim(A1))[1]
result[k,2] = system.time(GMPR(A1))[1]
result[k,3] = system.time(med(A1))[1]
result[k,4] = system.time(css(A1))[1]
result[k,5] = system.time(tmm(A1))[1]
result[k,6] = system.time(tss(A1))[1]
result[k,7] = system.time(uq(A1))[1]
# 10000/500
set.seed(1)
A1 = A
A1 = A1[1:10000,]
A1 = A1[rowSums(A1)>0,]
A1 = A1[,colSums(A1)>0]
A1 = A1[,1:500]
k = 6
result[k,1] = system.time(rsim(A1))[1]
result[k,2] = system.time(GMPR(A1))[1]
result[k,3] = system.time(med(A1))[1]
result[k,4] = system.time(css(A1))[1]
result[k,5] = system.time(tmm(A1))[1]
result[k,6] = system.time(tss(A1))[1]
result[k,7] = system.time(uq(A1))[1]
colnames(result) = c("RSim","GMPR","MED","CSS","TMM","TSS","UQ")
View(result)
result = as.data.frame(result)
write.csv(result,file = "compute_time.csv")
library(ggplot2)
library(latex2exp)
library(patchwork)
pearson_gamma = read.csv("../table/pearson/gamma_sensitivity.csv")[,-1]
da_gamma = data.frame('Sensitivity' = pearson_gamma,"gamma" = seq(0.5,0.95,0.05))
p1 = ggplot(data=da_gamma, aes(x=gamma, y=Sensitivity))+
geom_line(linetype = "solid",color = "#FF9999")+
geom_point(color = "#FF9999") +
xlab(expression(gamma)) +
ylab("Sensitivity")+
ylim(0,1)+
theme_bw()+
theme(legend.text = element_text(size=10))
t_gamma = read.csv("../table/t/gamma_sensitivity.csv")[,-1]
da_gamma = data.frame('Sensitivity' = t_gamma,"gamma" = seq(0.5,0.95,0.05))
p2 = ggplot(data=da_gamma, aes(x=gamma, y=Sensitivity))+
geom_line(linetype = "solid",color = "#FF9999")+
geom_point(color = "#FF9999") +
xlab(expression(gamma)) +
ylab("Sensitivity")+
ylim(0,1)+
theme_bw()+
theme(legend.text = element_text(size=10))
pearson_gamma = read.csv("../table/pearson/gammma_FDR.csv")[,-1]
pearson_gamma = read.csv("../table/pearson/gamma_FDR.csv")[,-1]
da_gamma = data.frame('Sensitivity' = pearson_gamma,"gamma" = seq(0.5,0.95,0.05))
p1 = ggplot(data=da_gamma, aes(x=gamma, y=Sensitivity))+
geom_line(linetype = "solid",color = "#FF9999")+
geom_point(color = "#FF9999") +
xlab(expression(gamma)) +
ylab("Sensitivity")+
ylim(0,1)+
theme_bw()+
theme(legend.text = element_text(size=10))
t_gamma = read.csv("../table/t/gamma_sensitivity.csv")[,-1]
da_gamma = data.frame('Sensitivity' = t_gamma,"gamma" = seq(0.5,0.95,0.05))
p2 = ggplot(data=da_gamma, aes(x=gamma, y=Sensitivity))+
geom_line(linetype = "solid",color = "#FF9999")+
geom_point(color = "#FF9999") +
xlab(expression(gamma)) +
ylab("Sensitivity")+
ylim(0,1)+
theme_bw()+
theme(legend.text = element_text(size=10))
pearson_gamma = read.csv("../table/pearson/gammma_FDR.csv")[,-1]
